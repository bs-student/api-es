<?php

namespace AppBundle\Repository;

/**
 * UniversityRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UniversityRepository extends \Doctrine\ORM\EntityRepository
{

    public function getUniversitySearchResults($searchQuery){
        return $this->getEntityManager()
            ->createQueryBuilder('u')
            ->select('u.universityName')

            ->from('AppBundle:University', 'u')
            ->andwhere('u.universityName LIKE :query ')
            ->setParameter('query', '%'.$searchQuery.'%')
            ->getQuery()
            ->getResult();
    }
    public function getAllUniversities()
    {

        return $this->getEntityManager()
            ->createQueryBuilder('u')
            ->select('u.id as universityId, u.universityName,u.universityUrl,u.universityStatus')
            ->from('AppBundle:University', 'u')
            ->getQuery()
            ->getResult();

    }

    public function getUniversitySearchResultNumberAdmin($searchQuery)
    {
        return $this->getEntityManager()->createQueryBuilder('u')
            ->select('COUNT(u)')
            ->from('AppBundle:University', 'u')

            ->andwhere('u.universityName LIKE :query ')
            ->setParameter('query', '%' . $searchQuery . '%')

            ->getQuery()
            ->getSingleScalarResult();
    }

    public function getUniversitySearchResultAdmin($searchQuery, $page_number, $page_size)
    {
        $firstResult = ($page_number - 1) * $page_size;

        return $this->getEntityManager()
            ->createQueryBuilder('u')
            ->select('u.id as universityId, u.universityName,u.universityUrl,u.universityStatus')
            ->from('AppBundle:University', 'u')

            ->andwhere('u.universityName LIKE :query ')
            ->setParameter('query', '%' . $searchQuery . '%')
            ->setMaxResults($page_size)
            ->setFirstResult($firstResult)
            ->getQuery()
            ->getResult();
    }

    public function getActivatedUniversitySearchResults($searchQuery){

        return $this->getEntityManager()
            ->createQueryBuilder('u')
            ->select('c.id as campusId, u.universityName, c.campusName, s.stateShortName, co.countryName')

            ->from('AppBundle:University', 'u')

            ->innerJoin('AppBundle:Campus', 'c','WITH', 'u.id = c.university')
            ->innerJoin('AppBundle:State', 's','WITH', 's.id = c.state')
            ->innerJoin('AppBundle:Country', 'co','WITH', 'co.id = s.country')
            ->andwhere('u.universityStatus=\'Activated\'')
            ->andwhere('c.campusName LIKE :query OR u.universityName LIKE :query OR co.countryName LIKE :query OR s.stateName LIKE :query')

            ->setParameter('query', '%'.$searchQuery.'%')
            ->getQuery()
            ->getResult();






    }
}
