<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * LogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LogRepository extends EntityRepository
{

    public function getLogSearchResult($usernameQuery,$logTypeQuery,$logUserTypeQuery, $pageNumber, $pageSize,$sort){
        $firstResult = ($pageNumber - 1) * $pageSize;
        $qb= $this->getEntityManager()
            ->createQueryBuilder('u')
            ->select('l.id as logId, u.username,l.logType,l.logDateTime,l.logUserType,l.logDescription,l.userIpAddress')
            ->from('AppBundle:Log', 'l')
            ->innerJoin('AppBundle:User', 'u', 'WITH', 'u.id = l.user')

            ->andwhere('u.username LIKE :usernameQuery ')
            ->andwhere('l.logType LIKE :logTypeQuery')
            ->andwhere('l.logUserType LIKE :logUserTypeQuery')



            ->setParameter('usernameQuery', '%' . $usernameQuery . '%')
            ->setParameter('logTypeQuery', '%' . $logTypeQuery . '%')
            ->setParameter('logUserTypeQuery', '%' . $logUserTypeQuery. '%')


            ->setMaxResults($pageSize)
            ->setFirstResult($firstResult);


        foreach($sort as  $key => $value){
            $qb->addOrderBy("l.".$key,$value);
        }
        return $qb->getQuery()
            ->getResult();
    }

    public function getLogSearchNumber($usernameQuery,$logTypeQuery,$logUserTypeQuery){
        $qb =  $this->getEntityManager()->createQueryBuilder('l')
            ->select('COUNT(l)')
            ->from('AppBundle:Log', 'l')
            ->innerJoin('AppBundle:User', 'u', 'WITH', 'u.id = l.user')

            ->andwhere('u.username LIKE :usernameQuery ')
            ->andwhere('l.logType LIKE :logTypeQuery')
            ->andwhere('l.logUserType LIKE :logUserTypeQuery')

            ->setParameter('usernameQuery', '%' . $usernameQuery . '%')
            ->setParameter('logTypeQuery', '%' . $logTypeQuery . '%')
            ->setParameter('logUserTypeQuery', '%' . $logUserTypeQuery. '%');


        return $qb->getQuery()
            ->getSingleScalarResult();
    }
}
